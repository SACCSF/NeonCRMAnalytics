name: Create Report

on:
  # push: // just use this for testing
  schedule:
    - cron: '0 5 * 1,4,7,10 *' # every 3 months at 5am

jobs:
  requirements:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Check requirements
        uses: ekvanox/pipreqs-action@master
        with:
          PROJECT_PATH: .
          REQUIREMENT_PATH: ./requirements.txt
          COMMIT_MESSAGE: "Updated requirements.txt"

  report:
    runs-on: ubuntu-latest
    needs: requirements
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip' # caching pip dependencies

    - name: Install reqirements
      run: pip install -r ./requirements.txt

    - uses: actions/checkout@v4
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

    - name: Remove Company File
      uses: JesseTG/rm@v1.0.3
      with:
        path: ./companies.csv

    - name: Remove Individuals File
      uses: JesseTG/rm@v1.0.3
      with:
        path: ./individuals.csv

    - name: 'Create env file'
      run: |
        touch /home/runner/work/NeonCRMAnalytics/NeonCRMAnalytics/.env
        echo API_ORG_ID=${{ secrets.API_ORG_ID }} >> /home/runner/work/NeonCRMAnalytics/NeonCRMAnalytics/.env
        echo API_API_KEY=${{ secrets.API_API_KEY }} >> /home/runner/work/NeonCRMAnalytics/NeonCRMAnalytics/.env
        cat /home/runner/work/NeonCRMAnalytics/NeonCRMAnalytics/.env

    - name: Install pdoc
      run: pip install pdoc

    - name: Build documentation
      run: pdoc *.py -o docs/ --logo "https://saccsf.com/wp-content/uploads/2015/05/saccsf-logo.jpg"

    - name: Extract CRM to CSV
      run: |
        python ./extract_crm_to_csv.py

    - name: Run Report
      run: python ./create_report.py
      shell: sh

    - uses: actions/upload-pages-artifact@v3
      with:
        path: docs/

    - name: Send mail
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{SECRETS.GOOGLE_MAIL_ADDRESS}}
        password: ${{SECRETS.GOOGLE_MAIL_APPPASSWORD}}
        subject: SACCSF Report
        to: flavio.waser@stud.hslu.ch, nicola.hermann@stud.hslu.ch, alex.iruthayanesan@stud.hslu.ch
        # cc:
        from: Swiss-American Chamber of Commerce San Francisco Chapter
        body: "See report online: ${{ SECRETS.GH_PAGES_URL }}"
        secure: true
        ignore_cert: true
        convert_markdown: true
        priority: low

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: report
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4